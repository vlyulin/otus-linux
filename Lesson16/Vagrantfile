
Vagrant.configure("2") do |config|

  config.vbguest.auto_update = false if Vagrant.has_plugin?('vagrant-vbguest')
  config.vm.define "webserver" do |server|
        server.vm.box = 'centos/7'
        server.vm.host_name = 'webserver'
        server.vm.network       :private_network,
                                ip: "10.0.0.10",
                                virtualbox__intnet: 'pxenet'
        server.vm.network       :private_network,
                                ip: "192.168.56.10"

        server.vm.network "forwarded_port", guest: 80, host: 8081

        server.vm.provider "virtualbox" do |vb|
                vb.memory = "1024"
                vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        end

        config.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
            systemctl restart sshd
        SHELL
  end

  config.vm.define "logserver" do |server|
        server.vm.box = 'centos/7'
        server.vm.host_name = 'logserver'
        server.vm.network       :private_network,
                                ip: "10.0.0.20",
                                virtualbox__intnet: 'pxenet'
        server.vm.network       :private_network,
                                ip: "192.168.56.20"

        server.vm.provider "virtualbox" do |vb|
                vb.memory = "1024"
                vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        end

        config.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
            sed -i 's/^PasswordAuthentication.*$/PasswordAuthentication yes/' /etc/ssh/sshd_config
            systemctl restart sshd
        SHELL
  end

  config.vm.provision "commonsteps", type: "ansible" do |ansible|
    ansible.playbook = "provisioning/provision.yml"
    ansible.inventory_path = "provisioning/hosts"
    ansible.host_key_checking = "false"
    ansible.limit = "all"
  end
  config.vm.provision "webserver", type: "ansible" do |ansible|
    ansible.playbook = "provisioning/provision-web.yml"
    ansible.inventory_path = "provisioning/hosts"
    ansible.host_key_checking = "false"
    ansible.limit = "webserver"
  end
  config.vm.provision "logserver", type: "ansible" do |ansible|
    ansible.playbook = "provisioning/provision-log.yml"
    ansible.inventory_path = "provisioning/hosts"
    ansible.host_key_checking = "false"
    ansible.limit = "logserver"
  end
end

