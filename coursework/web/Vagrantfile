# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  
  :web1 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.56.20'
  },
  :web2 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.56.21'
  },
  :php1 => {
	:box_name => "centos/7",
        :ip_addr => '192.168.56.23'
  },
  :php2 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.56.24'
  },
  :front => {
  	:box_name => "centos/7",
        :ip_addr => '192.168.56.25'
  }
}

# geerlingguy/centos8

Vagrant.configure("2") do |config|

  config.vbguest.auto_update = false if Vagrant.has_plugin?('vagrant-vbguest')
  config.vm.boot_timeout = 60

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1024"]
          end

          box.vm.provision :shell do |s|
             s.inline = 'mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh'
          end

          if boxname.to_s == "php2"
             config.vm.provision "all", type: "ansible" do |ansible|
                ansible.playbook = "provisioning/provision-all-servers.yml"
                ansible.inventory_path = "provisioning/hosts"
                ansible.host_key_checking = "false"
                ansible.limit = "all"
                # ansible.tags="nginx"
             end
             config.vm.provision "ceph", type: "ansible" do |ansible|
                ansible.playbook = "provisioning/provision-ceph-servers.yml"
                ansible.inventory_path = "provisioning/hosts"
                ansible.host_key_checking = "false"
                ansible.limit = "webservers, phpservers"
                # ansible.tags="nginx"
             end
	     config.vm.provision "web", type: "ansible" do |ansible|
            	ansible.playbook = "provisioning/provision-web-servers.yml"
            	ansible.inventory_path = "provisioning/hosts"
            	ansible.host_key_checking = "false"
		ansible.limit = "webservers"
	 	# ansible.tags="nginx"
             end
             config.vm.provision "php", type: "ansible" do |ansible|
                ansible.playbook = "provisioning/provision-php-servers.yml"
                ansible.inventory_path = "provisioning/hosts"
                ansible.host_key_checking = "false"
                ansible.limit = "phpservers"
             end
             config.vm.provision "app", type: "ansible" do |ansible|
                ansible.playbook = "provisioning/provision-app.yml"
                ansible.inventory_path = "provisioning/hosts"
                ansible.host_key_checking = "false"
                ansible.limit = "web1"
             end
             config.vm.provision "front", type: "ansible" do |ansible|
                ansible.playbook = "provisioning/provision-fronts-servers.yml"
                ansible.inventory_path = "provisioning/hosts"
                ansible.host_key_checking = "false"
                ansible.limit = "fronts"
             end
          end

      end
  end
end
